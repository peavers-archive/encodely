plugins {
    id 'org.springframework.boot' version '3.1.4'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'com.google.cloud.tools.jib' version '2.8.0' apply false
    id 'com.diffplug.spotless' version '5.11.1'
    id 'org.sonarqube' version '3.1.1'
    id 'com.palantir.git-version' version '0.12.3'
    id 'java'
    id 'application'
}

repositories {
    mavenCentral()
}

mainClassName = 'io.encodely.Application'

jar {
    enabled = false
}

sonarqube {
    properties {
        property "sonar.projectKey", "encodely"
        property "sonar.host.url", System.getenv("SONAR_HOST")
    }
}

subprojects {
    repositories {
        mavenCentral()
        maven {
            url "https://repo.microstream.one/repository/maven-public"
        }
    }
}

configure(subprojects.findAll {it.name != 'encodely-ui'}) {
    apply plugin: 'com.diffplug.spotless'
    apply plugin: 'org.springframework.boot'
    apply plugin: 'io.spring.dependency-management'
    apply plugin: 'java'

    dependencies {
        // Apache
        implementation 'commons-io:commons-io:2.8.0'
        implementation 'org.apache.commons:commons-lang3:3.12.0'
        implementation 'org.apache.commons:commons-exec:1.3'

        // Google
        implementation 'com.google.guava:guava:30.1.1-jre'

        // Misc
        implementation group: 'org.javatuples', name: 'javatuples', version: '1.2'

        // Development
        compileOnly 'org.projectlombok:lombok'
        developmentOnly 'org.springframework.boot:spring-boot-devtools'
        annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
        annotationProcessor 'org.projectlombok:lombok'

        // Tests
        testImplementation 'org.springframework.boot:spring-boot-starter-test'
        testImplementation 'io.projectreactor:reactor-test'
    }

    spotless {
        java {
            licenseHeader '/* Licensed under Apache-2.0 */'
            removeUnusedImports()
            googleJavaFormat()
        }
    }

    test {
        useJUnitPlatform()
    }
}
